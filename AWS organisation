provider "aws" {
  region = var.aws_region
}

resource "aws_organizations_organization" "main" {
  feature_set = "ALL"
}

resource "aws_organizations_organizational_unit" "ou" {
  name = var.ou_group
  parent_id = aws_organizations_organization.main.id
}

resource "aws_iam_user" "organization_admin" {
  name = var.username
  force_destroy = true
}

resource "aws_organizations_account" "sub_account" {
  name    = var.organization_name
  email   = "admin@example.com"
  parent_id = aws_organizations_organizational_unit.ou.id
}

resource "aws_iam_access_key" "admin_access_key" {
  user = aws_iam_user.organization_admin.name
}

resource "aws_iam_user_policy" "admin_policy" {
  name = "admin-policy"
  user = aws_iam_user.organization_admin.name

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = "organizations:List*",
        Effect = "Allow",
        Resource = "*",
      },
      {
        Action = "ec2:RunInstances",
        Effect = "Allow",
        Resource = "*",
      },
      # Add other necessary permissions here
    ]
  })
}

output "username" {
  value = aws_iam_user.organization_admin.name
}

output "console_login_url" {
  value = "https://${var.aws_region}.console.aws.amazon.com/"
}

output "admin_access_key" {
  value = aws_iam_access_key.admin_access_key.id
}

output "admin_secret_key" {
  value = aws_iam_access_key.admin_access_key.secret
}

output "org_id" {
  value = aws_organizations_organization.main.id
}
